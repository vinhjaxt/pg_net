name: Build

on: workflow_dispatch

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PGVER: [16]
    steps:
    - uses: actions/checkout@v3

    - name: Build
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg-snapshot main ${{ matrix.PGVER }}" > /etc/apt/sources.list.d/pgdg.list'
        curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg >/dev/null
        sudo apt-get update -y

        sudo apt-get -y install postgresql-${{ matrix.PGVER }} postgresql-server-dev-${{ matrix.PGVER }}
        sudo apt install -y libcurl4-gnutls-dev

        export PGDATA=/var/lib/postgresql/${{ matrix.PGVER }}/main
        export PGETC=/etc/postgresql/${{ matrix.PGVER }}/main
        export PGBIN=/usr/lib/postgresql/${{ matrix.PGVER }}/bin

        export PATH=/usr/lib/postgresql/${{ matrix.PGVER }}/bin/:$PATH
        export PG_CONFIG=/usr/lib/postgresql/${{ matrix.PGVER }}/bin/pg_config
        export PG_CFLAGS=-Werror
        make

    # Create release
    - name: Generate release tag
      id: tag
      run: |
        sudo timedatectl set-timezone Asia/Ho_Chi_Minh
        sudo date -s "$(wget -qSO- --max-redirect=0 google.com 2>&1 | grep Date: | cut -d' ' -f5-8)Z"
        echo "release_tag=ActionBuild_$(date +"%Y.%m.%d_%H-%M-%S")" >> $GITHUB_OUTPUT
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: |
          ./*
    # Done release

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
